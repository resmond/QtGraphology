"""
This type stub file was generated by pyright.
"""

from PySide6 import QtWidgets

class NodeTextItem(QtWidgets.QGraphicsTextItem):
    """
    NodeTextItem class used to display and edit the name of a NodeItem.
    """
    def __init__(self, text, parent=...) -> None:
        ...

    def mouseDoubleClickEvent(self, event): # -> None:
        """
        Re-implemented to jump into edit mode when user clicks on node text.

        Args:
            event (QtWidgets.QGraphicsSceneMouseEvent): mouse event.
        """
        ...

    def keyPressEvent(self, event): # -> None:
        """
        Re-implemented to catch the Return & Escape keys when in edit mode.

        Args:
            event (QtGui.QKeyEvent): key event.
        """
        ...

    def focusOutEvent(self, event): # -> None:
        """
        Re-implemented to jump out of edit mode.

        Args:
            event (QtGui.QFocusEvent):
        """
        ...

    def set_editable(self, value=...): # -> None:
        """
        Set the edit mode for the text item.

        Args:
            value (bool):  true in edit mode.
        """
        ...

    def set_node_name(self, name): # -> None:
        """
        Updates the node name through the node "NodeViewer().node_name_changed"
        signal which then updates the node name through the BaseNode object this
        will register it as an undo command.

        Args:
            name (str): new node name.
        """
        ...

    def set_locked(self, state=...): # -> None:
        """
        Locks the text item so it can not be editable.

        Args:
            state (bool): lock state.
        """
        ...

    @property
    def node(self): # -> QGraphicsItem:
        """
        Get the parent node item.

        Returns:
            NodeItem: parent node qgraphics item.
        """
        ...
